/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.umelab.selenium;

import java.util.concurrent.TimeUnit;
import java.util.List;
import java.util.Iterator;

import org.openqa.selenium.By;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;

import com.ibm.icu.text.Transliterator;

public class BiwaWeatherCrowler {
    private String url;
    private WebDriver driver;
    private BiwaWeatherModel model;

    /**
     * コンストラクタ
     * @param url
     */
    public BiwaWeatherCrowler(String url) {
        this.url = url;
        init();
    }

    /**
     * モデルを設定
     * @param model
     */
    public void setModel(BiwaWeatherModel model) {
        this.model = model;
    }

    /**
     * init WebDriver
     */
    private void init(){
        ChromeOptions options = new ChromeOptions();
        options.addArguments("--no-sandbox");
        options.addArguments("--headless");
        options.addArguments("--disable-gpu");
        driver = new ChromeDriver(options);
    }
    
    /**
     * 全角を半角に変換
     * @param text
     */
    public static String ToHankaku(String text) {
        Transliterator transliterator = Transliterator.getInstance("Fullwidth-Halfwidth");
        return transliterator.transliterate(text);
    }

    /**
     * htmlからデータを取得
     */
    public void getConnection() {
        try{
            driver.get(url);

            String source = driver.getPageSource();
            //System.out.println("source: " + source);
            
            String title = driver.getTitle();
            System.out.println("Web from: " + title);  

            driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);

            int index = 56;
            // 気温取得
            List<WebElement> tempList = driver.findElements(By.className("td-temp"));
            Object tempObj[] = tempList.toArray();
            String temperature = ((WebElement)tempObj[index]).getText();
            System.out.println("temperature: " + temperature);
            model.setTemperature(temperature);

            // 降水量取得
            List<WebElement> rainList = driver.findElements(By.className("td-precipitation1h"));
            Object rainObj[] = rainList.toArray();
            String rainfall = ((WebElement)rainObj[index]).getText();
            System.out.println("rainfall: " + rainfall);
            model.setRainFall(rainfall);

            // 風向き取得
            List<WebElement> windDList = driver.findElements(By.className("td-windDirection"));
            Object windDObj[] = windDList.toArray();
            String windDirection = ((WebElement)windDObj[index]).getText();
            System.out.println("wind direction: " + windDirection);
            model.setWindDirection(windDirection);

            // 風速取得
            List<WebElement> windSList = driver.findElements(By.className("td-wind"));
            Object windSObj[] = windSList.toArray();
            String windSpeed = ((WebElement)windSObj[index]).getText();
            System.out.println("wind speed: " + windSpeed);
            model.setWindSpeed(windSpeed);

            // 湿度取得
            List<WebElement> humList = driver.findElements(By.className("td-humidity"));
            Object humObj[] = humList.toArray();
            String humidity = ((WebElement)humObj[index]).getText();
            System.out.println("humidity: " + humidity);
            model.setHumidity(humidity);
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            driver.quit();
        }
    }
}
