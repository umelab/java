/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.umelab.selenium;

import java.util.concurrent.TimeUnit;
import java.util.List;

import org.openqa.selenium.By;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import com.ibm.icu.text.Transliterator;

public class BiwaWeatherCrowler {
    private String url;
    private WebDriver driver;
    private BiwaWeatherModel model;
    private int temperatureIndex;
    
    /**
     * コンストラクタ
     * @param url
     * @param temperatureIndex
     */
    public BiwaWeatherCrowler(String url, int temperatureIndex) {
        this.url = url;
        this.temperatureIndex = temperatureIndex;
        init();
    }

    /**
     * モデルを設定
     * @param model
     */
    public void setModel(BiwaWeatherModel model) {
        this.model = model;
    }

    /**
     * init WebDriver
     */
    private void init(){
        ChromeOptions options = new ChromeOptions();
        options.addArguments("--no-sandbox");
        options.addArguments("--headless");
        options.addArguments("--disable-gpu");
        driver = new ChromeDriver(options);
    }
    
    /**
     * 全角を半角に変換
     * @param text
     */
    public static String ToHankaku(String text) {
        Transliterator transliterator = Transliterator.getInstance("Fullwidth-Halfwidth");
        return transliterator.transliterate(text);
    }

    /**
     * htmlからデータを取得
     */
    public void scrapeWeatherData() {
        try{
            driver.get(url);
            driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);

            // 気温取得
            String temperature = getWeatherData("td-temp", temperatureIndex);
            model.setTemperature(temperature);
            System.out.println("temperature: " + temperature);

            // 降水量取得
            String rainfall = getWeatherData("td-precipitation1h", temperatureIndex);
            model.setRainFall(rainfall);
            System.out.println("rainfall: " + rainfall);

            // 風向き取得
            String windDirection = getWeatherData("td-windDirection", temperatureIndex);
            model.setWindDirection(windDirection);
            System.out.println("wind direction: " + windDirection);

            // 風速取得
            String windSpeed = getWeatherData("td-wind", temperatureIndex);
            model.setWindSpeed(windSpeed);
            System.out.println("wind speed: " + windSpeed);

            // 湿度取得
            String humidity = getWeatherData("td-humidity", temperatureIndex);
            model.setHumidity(humidity);
            System.out.println("humidity: " + humidity);

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            driver.quit();
        }
    }

    // getWeatherDataメソッドの追加: 汎用的なデータ取得メソッド
    private String getWeatherData(String className, int index) {
        List<WebElement> elements = driver.findElements(By.className(className));
        return elements.size() > index ? elements.get(index).getText() : "";
    }
}
